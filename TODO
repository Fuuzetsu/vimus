Some open tasks, good for getting started with the code base ;)

 * Add command insert-album (similar to add-album)
 * Mark current song in playlist
 * Try to stay at currently selected song on ListWidget.update
 * Add option to skip (move!) over an album
 * Add hint on what is currently viewed (similar to vims Top | Bot | All | nn%)
 * Sort library on (Artist, Album, Disc, Track)
 * Improve on-line help
 * Get rid of unsafePerformIO hack for Input.ungetstr, investigate performance
   issue with wgetch
 * Update filter-view after update
 * Add volume control (depending on output type in /etc/mpd.con this will work
   global/ALSA or app based/pulse)
 * Add a tab bar at the top, that shows the current tab (and possibly bread
   crumbs for browser)
 * Proper config file support (see FIXME in Main.hs)
 * Print all mappings on :map
 * Print mapping for a given name on :map <name>

 * filterPreview is very slow if you append to the beginning of the search
   term.  Can we fix this by using a `Map` as cache?

 * Use a zipper for ListWidget

 * Add command :set autofollow=<timeout>, that automatically sets the
   cursor position in the playlist widget to the current song, when the current
   song changes (but only if the cursor has not been moved for <timeout>
   seconds)

 * Change type of playlist widget to (ListWidget MPD.Song)

ISSUES:

 * Currently expansion of <cr> in macro definitions (:map) is case sensitive,
   so <CR> is not expanded

 * The actual value of a ctrl-key-combinations depends on the terminal, so
   we may need to make some effort to get that right in a portable way

 * We still have some startup flicker.  My current guess is, that we only get
   rid of it if we fetch all data to draw the initial screen before calling
   initscr/start_color.

widget:
 * find better names for WAction, WCommand, wCommand, wModify and wReturn
 * more documentation
